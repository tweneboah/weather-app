{"version":3,"sources":["logo.svg","img/weather.svg","redux/slices/weatherSlices.js","App.js","reportWebVitals.js","redux/store/store.js","index.js"],"names":["fetchWeatherAction","createAsyncThunk","payload","a","rejectWithValue","getState","dispatch","axios","get","process","data","response","weatherSlices","createSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","weather","error","undefined","rejected","App","useDispatch","useState","city","setCity","useEffect","useSelector","class","src","weatherSVG","alt","value","onChange","e","target","placeholder","onClick","type","className","message","icon","main","Math","ceil","Number","temp","sys","country","description","humidity","href","width","height","viewBox","fill","xmlns","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09959053.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/weather.41709da0.svg\";","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchWeatherAction = createAsyncThunk(\n  \"fetch/weather\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    try {\n      const { data } = await axios.get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=${process.env.REACT_APP_OPEN_WEATHER_KEY}&units=imperial`\n      );\n\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n\nconst weatherSlices = createSlice({\n  name: \"weather\",\n  initialState: { name: \"data\" },\n  extraReducers: builder => {\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action?.payload;\n      state.loading = false;\n      state.error = undefined;\n    });\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.error = action?.payload;\n      state.loading = false;\n      state.weather = undefined;\n    });\n  },\n});\n\nexport default weatherSlices.reducer;\n","import logo from \"./logo.svg\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport weatherSVG from \"./img/weather.svg\";\n\nimport { fetchWeatherAction } from \"./redux/slices/weatherSlices\";\n//display icon https://openweathermap.org/img/wn/${icon}.png\nfunction App() {\n  const dispatch = useDispatch();\n  const [city, setCity] = useState(\"kumasi\");\n  useEffect(async () => {\n    dispatch(fetchWeatherAction(city));\n  }, [dispatch]);\n  const state = useSelector(state => state?.weather);\n  const { weather, loading, error } = state;\n\n  return (\n    <div>\n      <section class=\"relative bg-gray-900  min-h-screen\">\n        <img\n          class=\"w-56 lg:block lg:absolute top-0 left-0 pt-10\"\n          src={weatherSVG}\n          alt=\"/\"\n        />\n\n        <div class=\"relative container pt-12 px-4 mb-20 mx-auto text-center\">\n          <span class=\"text-blue-500 font-semibold\">\n            Built with react and redux\n          </span>\n          <h2 class=\"mt-8 mb-8 lg:mb-12 text-white text-4xl lg:text-6xl font-semibold\">\n            Weather App\n          </h2>\n          <p class=\"max-w-3xl mx-auto mb-8 lg:mb-12 text-white text-xl opacity-50\">\n            Find out the current weather situation around the world\n          </p>\n          <input\n            value={city}\n            onChange={e => setCity(e.target.value)}\n            placeholder=\"Search City\"\n            class=\"relative z-10 inline-block w-full md:w-auto mb-2  px-3 py-2 mr-4  font-medium leading-normal bg-transparent border-2 rounded-lg text-green-400 \"\n          ></input>\n          <button\n            onClick={() => dispatch(fetchWeatherAction(city))}\n            type=\"button\"\n            className=\"inline-flex items-center px-3 pr-3 28 text-center py-3 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Search\n          </button>\n        </div>\n        {loading ? (\n          <h1 class=\"text-gray-400 text-3xl text-center\">\n            Loading please wait...\n          </h1>\n        ) : error ? (\n          <h1 class=\"text-red-400 text-3xl text-center\">{error?.message}</h1>\n        ) : (\n          <div class=\"max-w-6xl px-4 mx-auto \">\n            <div class=\"flex flex-wrap -mx-4 justify-center\">\n              <div class=\"w-full md:w-1/3 px-4\">\n                <div class=\"p-8 border border-blue-800 rounded-lg\">\n                  <div class=\"flex justify-start  items-center\">\n                    <span class=\"flex items-center justify-center w-16 h-16 rounded-full border-2\">\n                      <img\n                        class=\"w-56 \"\n                        src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`}\n                        alt=\"/\"\n                      />\n                    </span>\n                    <h1 class=\"text-gray-300 pl-5\">\n                      {weather?.weather[0].main}\n                    </h1>{\" \"}\n                  </div>\n                  <h1 class=\"text-gray-300 text-center text-4xl mb-10\">\n                    {Math.ceil(Number(weather?.main.temp))}{\" \"}\n                    <span class=\"text-yellow-500 text-4xl\">°C</span>\n                  </h1>\n                  <h3 class=\"mb-6 text-xl text-white font-semibold\">\n                    {weather?.name}, {weather?.sys?.country}\n                  </h3>\n                  <p class=\"mb-8 text-gray-300\">\n                    The weather condition in {weather?.name},{\" \"}\n                    {weather?.sys?.country} is described as :{\" \"}\n                    {weather?.weather[0].description} with a temperature of{\" \"}\n                    {Math.ceil(Number(weather?.main.temp))} °C and a humidity of{\" \"}\n                    {weather?.main?.humidity} %\n                  </p>\n                  <a\n                    class=\"ml-auto flex items-center justify-center w-20 h-20 rounded-full  hover:bg-blue-700 text-white\"\n                    href=\"#\"\n                  >\n                    <span class=\"flex items-center justify-center w-16 h-16 rounded-full border-2\">\n                      <img\n                        class=\"w-56 \"\n                        src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}.png`}\n                        alt=\"/\"\n                      />\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </section>\n      {/* Footer */}\n      <div class=\"text-center bg-red-900\">\n        <p class=\"mb-4  text-gray-300\">\n          Developed by\n          <span class=\"p-2 text-yellow-300\">\n            <a href=\"https://www.youtube.com/channel/UCvu6J9q1AM6q4xysGqAvVyw\">\n              i-Novotek\n            </a>\n          </span>\n        </p>\n        <a\n          class=\"inline-flex text-blue-400 hover:text-blue-500 font-bold\"\n          href=\"https://www.youtube.com/channel/UCvu6J9q1AM6q4xysGqAvVyw\"\n        >\n          <span className=\"mb-10\">Watch the tutorial</span>\n          <svg\n            class=\"ml-4 w-4 h-5\"\n            width=\"19\"\n            height=\"20\"\n            viewBox=\"0 0 19 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M18.7383 1.47342L18.7383 10.9304L17.5562 10.9304L17.5562 2.89788L0.834948 19.625L0.00154682 18.7916L16.7228 2.06448L9.28125 2.06448L9.28125 0.882355L18.1472 0.882355C18.4737 0.882355 18.7383 1.14697 18.7383 1.47342Z\"\n              fill=\"#1F40FF\"\n            ></path>\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport weather from \"../slices/weatherSlices\";\nconst store = configureStore({\n  reducer: {\n    weather: weather,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}